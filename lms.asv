function [thetahat, xhat] = lms(x, y, N, mu)
% [thetahat, xhat] = lms(x, y, N, muu)
%
% x         - Observed Data sequence
% y         - Signal sequence
% N         - filter order
% muu       - Step size (learning rate)
% thetahat  - Matrix with estimates of theta. 
% xhat      - Estimate of x
%
% lms: The Least-Mean Square Algorithm
%
% Estimator: xhat(n) = Y^{T}(n)thetahat(n-1)
%            thetahat(n) = thetahat(n − 1) + μY(n){x(n) − xhat(n)}


M = length(x); % Length of data sequences
% Initialize xhat and thetahat
xhat = zeros(M, 1); 
thetahat = zeros(M+1, N); 
% Loop
for n = N:M   
    % Slice N data from y vector for the computation
    Y_n = y(n-N+1:n);
    % xhat(n) = Y^{T}(n)thetahat(n-1)
    xhat(n) = Y_n' * thetahat(n-1, :)';  
    % thetahat(n) = thetahat(n − 1) + μY(n){x(n) − xhat(n)} 
    thetahat(n, :) = thetahat(n-1, :) + (mu * Y_n * (x(n) - xhat(n)))';
end

end
